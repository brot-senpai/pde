{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"pde","provenance":[],"collapsed_sections":[],"mount_file_id":"1cEvQXJ0O3hjOpP3gkiRfkOfu0OClkjJs","authorship_tag":"ABX9TyNXNgDApjdQEgzHaZhtY3jZ"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"QDqBecN43FCw","executionInfo":{"status":"ok","timestamp":1607883207193,"user_tz":300,"elapsed":599,"user":{"displayName":"Khan Tran","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj8MRO5avYTSuRm4Mu-mkncsLGGPMQw5eLm6fyA=s64","userId":"15610206742693910211"}}},"source":["!cp /content/drive/MyDrive/phyworx/babylonloader.py ."],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ErwdYsOrffWn","executionInfo":{"status":"ok","timestamp":1607879060788,"user_tz":300,"elapsed":1502,"user":{"displayName":"Khan Tran","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj8MRO5avYTSuRm4Mu-mkncsLGGPMQw5eLm6fyA=s64","userId":"15610206742693910211"}},"outputId":"869206a4-220a-4837-f5c7-8f45065fde65"},"source":["from google.colab import drive \n","drive.mount(\"/content/drive\", force_remount=True)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y_D4LIYk3oMU","executionInfo":{"status":"ok","timestamp":1607883210508,"user_tz":300,"elapsed":449,"user":{"displayName":"Khan Tran","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj8MRO5avYTSuRm4Mu-mkncsLGGPMQw5eLm6fyA=s64","userId":"15610206742693910211"}}},"source":["from babylonloader import Babylon\n","from IPython.display import HTML, display, Javascript\n","from ipywidgets import IntSlider, interact\n","from ipywidgets.embed import embed_data"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"5p6Y9NPx37b-","executionInfo":{"status":"ok","timestamp":1607883310500,"user_tz":300,"elapsed":525,"user":{"displayName":"Khan Tran","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj8MRO5avYTSuRm4Mu-mkncsLGGPMQw5eLm6fyA=s64","userId":"15610206742693910211"}}},"source":["babylon = Babylon(backgroundColor=(0,0,0))"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":578},"id":"QUVxjaEbMfBO","executionInfo":{"status":"ok","timestamp":1607883314328,"user_tz":300,"elapsed":389,"user":{"displayName":"Khan Tran","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj8MRO5avYTSuRm4Mu-mkncsLGGPMQw5eLm6fyA=s64","userId":"15610206742693910211"}},"outputId":"8abfc088-62d3-4e85-b9b0-fe356c3eee46"},"source":["display(HTML(babylon.header()))\r\n","display(HTML(babylon.scene()))"],"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","\t\t<head>\n","      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n","\n","      <script src=\"https://code.jquery.com/pep/0.4.2/pep.min.js\"></script>\n","      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.6.2/dat.gui.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/ammo.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/cannon.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/Oimo.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/earcut.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/babylon.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/materialsLibrary/babylonjs.materials.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/proceduralTexturesLibrary/babylonjs.proceduralTextures.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/postProcessesLibrary/babylonjs.postProcess.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/loaders/babylonjs.loaders.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/serializers/babylonjs.serializers.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/gui/babylon.gui.min.js\"></script>\n","      <script src=\"https://preview.babylonjs.com/inspector/babylon.inspector.bundle.js\"></script>\n","\n","    \t<style>\n","        html, body {\n","          overflow: hidden;\n","          width: 100%;\n","          height: 100%;\n","          margin: 0;\n","          padding: 0;\n","        }\n","\n","        #renderCanvas {\n","          width: 100%;\n","          height: 100%;\n","          touch-action: none;\n","            }\n","      </style>\n","    </head>\n","  "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","\t\t<canvas id=\"renderCanvas\"></canvas>\n","      \n","    <script type=\"text/javascript\">\n","          \n","    var canvas = document.getElementById(\"renderCanvas\");\n","\n","    var engine = null;\n","    var scene = null;\n","    var sceneToRender = null;\n","    var createDefaultEngine = function() { return new BABYLON.Engine(canvas, \n","      true, { preserveDrawingBuffer: true, stencil: true,  \n","      disableWebGL2Support: false}); };\n","    const createScene = function () {\n","      const scene = new BABYLON.Scene(engine);\n","      scene.clearColor = new BABYLON.Color3(0, 0, 0);\n","      const camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, \n","      Math.PI / 2, 2, new BABYLON.Vector3(0, 0, 5), scene);\n","      camera.attachControl(canvas, true);\n","      const light = new BABYLON.HemisphericLight(\"light\", \n","      new BABYLON.Vector3(1, 1, 0), scene);\n","      var dia = 1;\n","      const sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", \n","                {segments: 64, diameter: dia});\n","      return scene;\n","\n","    };\n","\n","    var engine;\n","    var scene;\n","    initFunction = async function() {               \n","      var asyncEngineCreation = async function() {\n","      try {\n","        return createDefaultEngine();\n","        } catch(e) {\n","        console.log(\"the available createEngine function failed. Creating the default engine instead\");\n","        return createDefaultEngine();\n","        }\n","      }\n","\n","      engine = await asyncEngineCreation();\n","      if (!engine) throw 'engine should not be null.';\n","    \tscene = createScene();};\n","      initFunction().then(() => {sceneToRender = scene        \n","        engine.runRenderLoop(function () {\n","        if (sceneToRender && sceneToRender.activeCamera) {\n","        sceneToRender.render();\n","          }\n","      });\n","      });\n","\n","      \n","      window.addEventListener(\"resize\", function () {\n","          engine.resize();\n","        });\n","    </script>\n","\t\t"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]}]}